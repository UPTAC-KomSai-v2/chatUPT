/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uptackomsai.chatupt.gui;

import com.google.gson.Gson;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.swing.JOptionPane;
import uptackomsai.chatupt.model.Message;
import uptackomsai.chatupt.model.User;

/**
 *
 * @author Lei
 */
public class SignupFrame extends javax.swing.JFrame {

    /**
     * Creates new form SignupFrame
     */
    public SignupFrame() {
        setUndecorated(true); 
        setResizable(false);
        
        initComponents();
        setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        setTitle("ChatUPT");
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        borderPanel = new javax.swing.JPanel();
        headPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        profilepicPanel = new javax.swing.JPanel();
        profilepicPreview = new javax.swing.JPanel();
        profilepicLabel = new javax.swing.JLabel();
        profilepicButton = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        usernamePanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordPanel = new javax.swing.JPanel();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        password2Panel = new javax.swing.JPanel();
        password2Label = new javax.swing.JLabel();
        password2Field = new javax.swing.JPasswordField();
        emailPanel = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        actionsPanel = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(400, 400));

        borderPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        borderPanel.setLayout(new java.awt.BorderLayout());

        headPanel.setPreferredSize(new java.awt.Dimension(400, 50));

        jLabel1.setText("Signup Form");
        headPanel.add(jLabel1);

        borderPanel.add(headPanel, java.awt.BorderLayout.PAGE_START);

        profilepicPreview.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        profilepicPreview.setToolTipText("");
        profilepicPreview.setLayout(new java.awt.BorderLayout());

        profilepicLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profilepicLabel.setText("<profile pic>");
        profilepicLabel.setPreferredSize(new java.awt.Dimension(100, 100));
        profilepicPreview.add(profilepicLabel, java.awt.BorderLayout.CENTER);

        profilepicButton.setText("Change");
        profilepicButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        profilepicButton.setPreferredSize(new java.awt.Dimension(100, 23));
        profilepicButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        profilepicPreview.add(profilepicButton, java.awt.BorderLayout.SOUTH);

        profilepicPanel.add(profilepicPreview);

        borderPanel.add(profilepicPanel, java.awt.BorderLayout.CENTER);

        inputPanel.setPreferredSize(new java.awt.Dimension(400, 200));
        inputPanel.setLayout(new java.awt.GridLayout(5, 1));

        usernamePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        usernameLabel.setText("Username");
        usernamePanel.add(usernameLabel);

        usernameTextField.setText("Enter Username");
        usernameTextField.setPreferredSize(new java.awt.Dimension(250, 30));
        usernamePanel.add(usernameTextField);

        inputPanel.add(usernamePanel);

        passwordPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        passwordLabel.setText("Password");
        passwordPanel.add(passwordLabel);

        passwordField.setToolTipText("Enter Your Password");
        passwordField.setPreferredSize(new java.awt.Dimension(250, 30));
        passwordPanel.add(passwordField);

        inputPanel.add(passwordPanel);

        password2Panel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        password2Label.setText("Confirm Password");
        password2Panel.add(password2Label);

        password2Field.setPreferredSize(new java.awt.Dimension(250, 30));
        password2Panel.add(password2Field);

        inputPanel.add(password2Panel);

        emailPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        emailLabel.setText("Email Address");
        emailPanel.add(emailLabel);

        emailTextField.setText("user@gmail.com");
        emailTextField.setPreferredSize(new java.awt.Dimension(250, 30));
        emailPanel.add(emailTextField);

        inputPanel.add(emailPanel);

        actionsPanel.setPreferredSize(new java.awt.Dimension(400, 50));

        submitButton.setText("Submit Form");
        submitButton.setToolTipText("");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        actionsPanel.add(submitButton);

        cancelButton.setText("Cancel Signup");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        actionsPanel.add(cancelButton);

        inputPanel.add(actionsPanel);

        borderPanel.add(inputPanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(borderPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        String username = usernameTextField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();
        String confirmPassword = new String(password2Field.getPassword()).trim();
        String email = emailTextField.getText().trim();

        if (!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (username.isEmpty() || password.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Create a JSON object for user registration
            Gson gson = new Gson();
            User user = new User(username, password, email);
            String userJson = gson.toJson(user);

            // Connect to the server and send registration request
            Socket socket = new Socket("localhost", 12345); // Assuming server is on localhost
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            // Create a registration request message
            Message message = new Message("register", userJson); // Use Message structure
            String jsonMessage = gson.toJson(message);

            // Send registration request to server
            out.println(jsonMessage);

            // Read response from server
            String response = in.readLine();
            JOptionPane.showMessageDialog(this, response, "Server Response", JOptionPane.INFORMATION_MESSAGE);

            // Close the connection
            socket.close();

            if (response.equalsIgnoreCase("Registration successful.")) {
                this.dispose(); // Close the signup frame on success
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Failed to connect to server: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignupFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignupFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JPanel borderPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JPanel emailPanel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField password2Field;
    private javax.swing.JLabel password2Label;
    private javax.swing.JPanel password2Panel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel passwordPanel;
    private javax.swing.JButton profilepicButton;
    private javax.swing.JLabel profilepicLabel;
    private javax.swing.JPanel profilepicPanel;
    private javax.swing.JPanel profilepicPreview;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JPanel usernamePanel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
